Tabulka s rozptýlenými položkami
Tabulka je reprezentována polem ukazatelù na zøetìzený seznam. Ukládají se do ní symboly funkcí. V našem pøípadì byla implementována globální tabula symbolù pro parametry funkcí a dále lokální tabulka symbolù, která obsahuje parametry konkrétní funkce. Položky globální tabulky v sobì obsahují odkaz na lokální tabulku.
 
Heap Sort
Jedná se o øazení hromadou. Pole je zde reprezentováno binární stromovou strukturou heap(neboli hromada). Pro ni platí, že otcovský uzel je vždy vìtší než jeho synovské uzly. Pro setøízení prvkù je pole bráno jako porušená hromada, na které je volán v našem pøípadì funkce siftdown, která napravuje nerovnost hromady v koøenovém uzlu. Tím že vymìní nejvìtší prvek s koøenem haldy. Následnì ovšem dochází ke kontrole a pøípadné aplikaci funkce siftdown na vìtve hromady, kde mohlo prohozením dojít k opìtné nerovnováze. Takhle program prochází celou strukturu a sestavuje z ní plnohodnotnou hromadu. Na konci odebíráním se z hromady odebírají koøenové uzly a tak jsou øazeny do setøízeného pole. Její èasová složitost je ?(n*log(n)), jelikož funkce sift down prochází patra kterých je log n a je volána na n prvkù haldy.
 
Knuth-Morris-Pratt Algortmus
Jedná se o algoritmus sloužící pro vyhledání podøetìzce v øetezci. Ten vytváøí masku hledaného podøetìzce a urèuje posun vyhledávání v pøípadì neshody v porovnávání urèitého písmene podøetìzce s písmenem v prohledávaném textu. Maska podøetìzce je koneèný automat, díky kterému není nutné kontrolovat pasáže z pøedchozích porovnání. V pøípadì neshody podøetìzce s øetezcem se algoritmus snaží v kontrole posunout doprava tak, aby nebylo nutné se v øetìzci vracet. Pozice podøetìzce, které o které se algorimus posunul se s øetìzcem shodují. Èasová složitost algoritmu je O(m+n) kdy složitost vytvoøení masky je m a následná kontrola textu je poté už jen n. (pøípadnì na místì ještì dovysvìtlím pokud se budou ptát, jinak by prezentace byla na dlouho)